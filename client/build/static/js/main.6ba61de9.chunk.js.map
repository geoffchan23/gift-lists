{"version":3,"sources":["Login/Login.js","List/EditInput.js","List/Person.js","List/generateUID.js","List/List.js","GiftLists.js","serviceWorker.js","index.js"],"names":["Login","state","selectedSearchObj","undefined","listSearchText","email","lists","showWarning","handleListSearchChange","e","_this","setState","target","value","handleAutocompleteSelect","val","item","handleNameChange","getFilteredListsFromServer","_callee","apiUrl","params","response","regenerator_default","a","wrap","_context","prev","next","abrupt","URL","Object","keys","forEach","key","searchParams","append","fetch","sent","json","stop","this","goToList","listInfo","filter","list","name","toLowerCase","length","props","history","push","concat","id","createList","_callee2","data","_context2","createdBy","method","_this$state","react_default","createElement","className","placeholder","onChange","onBlur","autoComplete","type","Autocomplete_default","wrapperProps","inputProps","onKeyPress","items","onSelect","renderItem","isHighlighted","style","background","getItemValue","shouldItemRender","indexOf","onClick","disabled","React","Component","withRouter","EditInput","showEditButton","nameInput","focus","_this2","_this$props","children","editMode","handleToggleEditMode","clickToEdit","assign","ref","input","Fragment","md","Person","_ref","selected","index","editInputField","removePerson","handleEditInput","bringPersonToFront","addGift","handleUpdateGift","removeGift","zIndex","left","src_List_EditInput","hide","map","gift","giftIndex","link","href","generateUID","timestamp","Date","min","max","parts","toString","split","reverse","i","Math","floor","random","generate","List","people","showEnterPassword","password","errorMsg","componentWillMount","getListInfoFromServer","match","listId","error","msg","indexList","console","log","objectSpread","d","p","oldList","toConsumableArray","createPersonCard","person","updateListOnServer","stopPropagation","field","g","_callee3","_context3","headers","Content-Type","body","JSON","stringify","handlePasswordChange","submitPassword","createdOn","toLocaleString","src_List_Person","GiftLists","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_GiftLists_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ba61de9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AutoComplete from 'react-autocomplete';\r\nimport './Login.scss';\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    selectedSearchObj: undefined,\r\n    listSearchText: '',\r\n    email: '',\r\n    lists: [],\r\n    showWarning: false,\r\n  }\r\n  handleListSearchChange = (e) => {\r\n    this.setState({\r\n      listSearchText: e.target.value,\r\n    });\r\n  }\r\n  handleAutocompleteSelect = (val, item) => {\r\n    this.setState({\r\n      listSearchText: val,\r\n      selectedSearchObj: item,\r\n    });\r\n  }\r\n  handleNameChange = (e) => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  getFilteredListsFromServer = async () => {\r\n    if (this.state.email === '' || this.state.email === ' ') return;\r\n    const apiUrl = new URL('http://localhost:9000/api/lists');\r\n    const params = {\r\n      email: this.state.email,\r\n    }\r\n    Object.keys(params).forEach(key => apiUrl.searchParams.append(key, params[key]))\r\n    const response = await fetch(apiUrl);\r\n    const lists = await response.json();\r\n    this.setState({ lists });\r\n  }\r\n  goToList = () => {\r\n    const listInfo = this.state.lists.filter(list => list.name.toLowerCase() === this.state.listSearchText.toLowerCase());\r\n    \r\n    if (listInfo.length) {\r\n      this.props.history.push(`/list/${listInfo[0].id}`);\r\n    } else {\r\n      this.setState({\r\n        showWarning: true\r\n      })\r\n    }\r\n  }\r\n  createList = async () => {\r\n    const apiUrl = new URL('http://localhost:9000/api/lists');\r\n    const params = {\r\n      name: this.state.listSearchText,\r\n      createdBy: this.state.email,\r\n    }\r\n    Object.keys(params).forEach(key => apiUrl.searchParams.append(key, params[key]))\r\n\r\n    const response = await fetch(apiUrl, { method: 'POST' });\r\n    const data = await response.json();\r\n    this.props.history.push(`/list/${data.id}`);\r\n  }\r\n  render() {\r\n    const {\r\n      handleListSearchChange,\r\n      handleAutocompleteSelect,\r\n      handleNameChange,\r\n      goToList,\r\n      createList,\r\n      getFilteredListsFromServer,\r\n    } = this;\r\n\r\n    const {\r\n      listSearchText,\r\n      email,\r\n      lists,\r\n      showWarning,\r\n    } = this.state;\r\n\r\n    return (\r\n      <form className='Login'>\r\n        <h1>Gift Lists</h1>\r\n        <input\r\n          placeholder='Enter email'\r\n          value={email}\r\n          onChange={handleNameChange}\r\n          onBlur={getFilteredListsFromServer}\r\n          autoComplete='on'\r\n          type='email'\r\n        />\r\n        <AutoComplete\r\n          wrapperProps={{\r\n            className: 'autocomplete',\r\n          }}\r\n          inputProps={{\r\n            placeholder: 'List name',\r\n            onKeyPress: (e) => e.key === 'Enter' ? goToList() : null\r\n          }}\r\n          value={listSearchText}\r\n          items={lists || []}\r\n          onChange={handleListSearchChange}\r\n          onSelect={handleAutocompleteSelect}\r\n          renderItem={(item, isHighlighted) =>\r\n            <div style={{ background: isHighlighted ? 'lightgray' : 'white' }} key={item.id} className='autocomplete-item'>\r\n              {item.name}\r\n            </div>\r\n          }\r\n          getItemValue={(item, a) => item.name }\r\n          shouldItemRender={(item, value) => (item.name.toLowerCase().indexOf(value.toLowerCase()) !== -1)}\r\n        />\r\n        {\r\n          showWarning && <span className='warning'>This list does not exist. Click <strong>Create New List</strong> to create it.</span>\r\n        }\r\n        <div className='actions'>\r\n          <button onClick={goToList} disabled={listSearchText === '' || listSearchText === ' '}>\r\n            Go To List\r\n          </button>\r\n          <button onClick={createList} disabled={listSearchText === '' || listSearchText === ' '}>\r\n            Create New List\r\n          </button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","import React from 'react';\r\nimport { MdEdit } from 'react-icons/md';\r\nimport './EditInput.scss';\r\n\r\nclass EditInput extends React.Component {\r\n  state = {\r\n    showEditButton: true,\r\n  }\r\n  componentDidUpdate() {\r\n    this.nameInput.focus();\r\n  }\r\n  render() {\r\n    const {\r\n      inputProps,\r\n      children,\r\n      editMode,\r\n      handleToggleEditMode,\r\n      className,\r\n      clickToEdit,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={`EditInput ${className}`}>\r\n        <input\r\n          {...inputProps}\r\n          ref={(input) => { this.nameInput = input; }}\r\n          className={editMode ? 'visible' : 'hidden'}\r\n          onBlur={(e) => handleToggleEditMode(e, true)}\r\n          onKeyPress={(e) => e.key === 'Enter' ? handleToggleEditMode(e, true) : null}\r\n        />\r\n        {\r\n          !editMode && (\r\n            <>\r\n              <div onClick={clickToEdit === false ? null : handleToggleEditMode}>\r\n                { children }\r\n              </div>\r\n              <button\r\n                onClick={() => {\r\n                  handleToggleEditMode();\r\n                }}\r\n                className='edit-btn'\r\n              >\r\n                Edit <MdEdit />\r\n              </button>\r\n            </>\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default EditInput;","import React from 'react';\r\nimport { MdClose, MdAdd, MdDeleteForever } from 'react-icons/md';\r\nimport EditInput from './EditInput';\r\nimport './Person.scss';\r\n\r\nconst Person = ({\r\n  id,\r\n  name,\r\n  list,\r\n  selected,\r\n  index,\r\n  editInputField,\r\n  removePerson,\r\n  handleEditInput,\r\n  handleToggleEditMode,\r\n  bringPersonToFront,\r\n  addGift,\r\n  handleUpdateGift,\r\n  removeGift,\r\n}) => (\r\n  <div\r\n    className={['Person' + (selected ? ' selected' : '')]}\r\n    onClick={() => bringPersonToFront(id)}\r\n    style={{\r\n      zIndex: index,\r\n      left: index * 60 + 'px',\r\n    }}\r\n  >\r\n    <EditInput\r\n      editMode={editInputField === 'name'}\r\n      inputProps={{\r\n        value: name,\r\n        placeholder: 'Enter name',\r\n        onChange: (e) => handleEditInput(index, 'name', e),\r\n      }}\r\n      handleToggleEditMode={(e, hide) => handleToggleEditMode(index, hide ? '' : 'name')}\r\n      className='person-edit-name'\r\n    >\r\n      <h3>{ name === '' ? 'Click to enter name' : name }</h3>\r\n    </EditInput>\r\n    <ul>\r\n      {\r\n        list.map((gift, giftIndex) => (\r\n          <li key={gift.id}>\r\n            <div>\r\n\r\n              <EditInput\r\n                editMode={editInputField === gift.id + 'gift.name'}\r\n                inputProps={{\r\n                  value: gift.name,\r\n                  placeholder: 'Enter gift',\r\n                  onChange: (e) => handleUpdateGift(index, gift.id, 'gift.name', e),\r\n                }}\r\n                handleToggleEditMode={(e, hide) => handleToggleEditMode(index, hide ? '' : gift.id + 'gift.name')}\r\n                className='gift-edit-name'\r\n              >\r\n                <h4>{ giftIndex + 1 }) { gift.name === '' ? 'Click to enter name' : gift.name }</h4>\r\n              </EditInput>\r\n\r\n              <EditInput\r\n                editMode={editInputField === gift.id + 'gift.link'}\r\n                inputProps={{\r\n                  value: gift.link,\r\n                  placeholder: 'Enter link',\r\n                  onChange: (e) => handleUpdateGift(index, gift.id, 'gift.link', e),\r\n                }}\r\n                handleToggleEditMode={(e, hide) => handleToggleEditMode(index, hide ? '' : gift.id + 'gift.link')}\r\n                className='gift-edit-input'\r\n                clickToEdit={gift.link === ''}\r\n              >\r\n                {\r\n                   gift.link === '' ?\r\n                    <span>Click to enter link</span> :\r\n                    <>\r\n                      <span className='gift-link-label'>{ gift.link }</span>\r\n                      <a href={gift.link} target='_'>Link</a>\r\n                    </>\r\n                }\r\n               \r\n              </EditInput>\r\n\r\n              <button onClick={() => removeGift(index, gift.id)} className='remove-gift-btn'>\r\n                <MdDeleteForever />\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))\r\n      }\r\n      <li>\r\n        <button onClick={(e) => addGift(index, e)} className='add-gift-btn'>\r\n          Add Gift <MdAdd />\r\n        </button>\r\n      </li>\r\n    </ul>\r\n    <button onClick={(e) => removePerson(index, e)} className='remove-person-btn'>\r\n      <MdClose />\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Person;","export default function generateUID() {\r\n  let length = 8;\r\n  let timestamp = +new Date();\r\n  \r\n  function _getRandomInt( min, max ) {\r\n   return Math.floor( Math.random() * ( max - min + 1 ) ) + min;\r\n  }\r\n  \r\n  function generate() {\r\n    var ts = timestamp.toString();\r\n    var parts = ts.split( \"\" ).reverse();\r\n    var id = \"\";\r\n    \r\n    for( var i = 0; i < length; ++i ) {\r\n     var index = _getRandomInt( 0, parts.length - 1 );\r\n     id += parts[index];\t \r\n    }\r\n    \r\n    return id;\r\n  }\r\n\r\n  return generate();\r\n}","import React from 'react';\r\nimport './List.scss';\r\nimport Person from './Person';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport generateUID from './generateUID';\r\nconst apiUrl = new URL('http://localhost:9000/api/lists');\r\n\r\nclass List extends React.Component {\r\n  state = {\r\n    listInfo: {},\r\n    people: [],\r\n    showEnterPassword: true,\r\n    password: '',\r\n    errorMsg: null,\r\n  }\r\n  componentWillMount = async () => {\r\n    await this.getListInfoFromServer();\r\n  }\r\n  getListInfoFromServer = async () => {\r\n    const response = await fetch(`${apiUrl.href}/${this.props.match.params.listId}?password=${this.state.password}`);\r\n    const data = await response.json();\r\n\r\n    if (data.error) {\r\n      this.setState({\r\n        showEnterPassword: true,\r\n        errorMsg: data.error === 2 ? data.msg : null,\r\n      })\r\n    } else {\r\n      data.people = data.people.length ? this.indexList(data.people) : [{\r\n        name: '',\r\n        list: [],\r\n        selected: true,\r\n        index: 0,\r\n        editMode: true,\r\n        editInputField: 'name',\r\n        id: generateUID(),\r\n      }];\r\n  \r\n      console.log(data);\r\n      this.setState({ \r\n        listInfo: {\r\n          ...data,\r\n          people: undefined\r\n        },\r\n        people: data.people,\r\n        showEnterPassword: false,\r\n      });\r\n    }\r\n  }\r\n  indexList = (list) => (\r\n    list.map((d, index) => {\r\n      d.index = index;\r\n      d.editInputField = '';\r\n      d.selected = (index === list.length-1);\r\n      d.id = generateUID();\r\n      return d;\r\n    })\r\n  )\r\n  bringPersonToFront = (id) => {\r\n    console.log('bringPersonToFront');\r\n    if (this.state.people.filter(p => p.selected)[0].id === id) return;\r\n    let oldList = [...this.state.people];\r\n    let index = 0;\r\n\r\n    oldList = oldList.map((d) => {\r\n      if (d.id === id) {\r\n        d.index = oldList.length-1;\r\n        d.selected = true;\r\n      } else {\r\n        d.index = index;\r\n        d.selected = false;\r\n        index++\r\n      }\r\n      return d;\r\n    });\r\n\r\n    this.setState({ people: oldList });\r\n  }\r\n  createPersonCard = () => {\r\n    console.log('createPersonCard');\r\n    const people = [ ...this.state.people ];\r\n    if (people.length !== 0) {\r\n      const prevSelectedPerson = people.filter(person => person.selected);\r\n      prevSelectedPerson[0].selected = false;\r\n    }\r\n    people.push({\r\n      name: '',\r\n      list: [],\r\n      selected: true,\r\n      index: people.length,\r\n      editMode: true,\r\n      editInputField: 'name',\r\n      id: generateUID(),\r\n    });\r\n    this.setState({ people });\r\n  }\r\n  removePerson = (index, e) => {\r\n    console.log('removePerson');\r\n    let people = [...this.state.people ].filter(p => p.index !== index);\r\n    people = this.indexList(people);\r\n    this.setState({ people }, () => this.updateListOnServer());\r\n    e.stopPropagation();\r\n  }\r\n  handleToggleEditMode = (index, field) => {\r\n    console.log('handleToggleEditMode', index, field);\r\n    this.setState({\r\n      people: [\r\n        ...this.state.people.map(person => {\r\n          if (person.index === index) {\r\n            person.editInputField = field;\r\n          }\r\n          return person;\r\n        })\r\n      ]\r\n    })\r\n    if (!field || field === '') {\r\n      this.updateListOnServer();\r\n    }\r\n  }\r\n  handleEditInput = (index, field, e) => {\r\n    console.log('handleEditInput', index, field);\r\n    this.setState({\r\n      people: [\r\n        ...this.state.people.map(person => {\r\n          if (person.index === index) {\r\n              person[field] = e.target.value;\r\n          }\r\n          return person;\r\n        })\r\n      ]\r\n    })\r\n  }\r\n  addGift = (index, e) => {\r\n    console.log('addGift', index);\r\n    this.setState({\r\n      people: [\r\n        ...this.state.people.map(person => {\r\n          if (person.index === index) {\r\n            person.list.push({\r\n              id: generateUID(),\r\n              name: '',\r\n              link: '',\r\n            })\r\n          }\r\n          return person;\r\n        })\r\n      ]\r\n    })\r\n    e.stopPropagation(); \r\n  }\r\n  handleUpdateGift = (index, id, field, e) => {\r\n    console.log('handleUpdateGift', index, id, field);\r\n    this.setState({\r\n      people: [\r\n        ...this.state.people.map(person => {\r\n          if (person.index === index) {\r\n            const giftToUpdate = person.list.filter(g => g.id === id)[0];\r\n            giftToUpdate[field.split('.')[1]] = e.target.value;\r\n          }\r\n          return person;\r\n        })\r\n      ]\r\n    })\r\n  }\r\n  removeGift = (index, id) => {\r\n    this.setState({\r\n      people: [\r\n        ...this.state.people.map(person => {\r\n          if (person.index === index) {\r\n            person.list = person.list.filter(g => g.id !== id);\r\n          }\r\n          return person;\r\n        })\r\n      ]\r\n    }, () => this.updateListOnServer())\r\n  }\r\n  updateListOnServer = async () => {\r\n    const params = {\r\n      method: 'PATCH',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(this.state.people),\r\n    }\r\n    const response = await fetch(`${apiUrl.href}/${this.props.match.params.listId}`, params);\r\n    const data = await response.json();\r\n    console.log('response from PATCH', data);\r\n  }\r\n  handlePasswordChange = (e) => {\r\n    this.setState({ password: e.target.value })\r\n  }\r\n  submitPassword = () => {\r\n    this.setState({ errorMsg: null }, () => {\r\n      this.getListInfoFromServer();\r\n    })\r\n  }\r\n  render() {\r\n    const {\r\n      listInfo,\r\n      people,\r\n      showEnterPassword,\r\n      password,\r\n      errorMsg,\r\n    } = this.state;\r\n\r\n    const {\r\n      bringPersonToFront,\r\n      createPersonCard,\r\n      removePerson,\r\n      handleToggleEditMode,\r\n      handleEditInput,\r\n      addGift,\r\n      handleUpdateGift,\r\n      removeGift,\r\n      handlePasswordChange,\r\n      submitPassword,\r\n    } = this;\r\n\r\n    console.log('render', people);\r\n    return (\r\n      showEnterPassword ? (\r\n        <div className='enter-password'>\r\n          {\r\n            errorMsg && <span>{ errorMsg }</span>\r\n          }\r\n          <input\r\n            type='password'\r\n            value={password}\r\n            placeholder='Enter password'\r\n            onChange={handlePasswordChange}\r\n            onKeyPress={(e) => e.key === 'Enter' ? submitPassword() : null}\r\n            className={errorMsg ? 'incorrect' : ''}\r\n          />\r\n          <button onClick={submitPassword}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className='List'>\r\n          <h1>{listInfo.name}</h1>\r\n          <h2>Created by: {listInfo.createdBy} on {new Date(listInfo.createdOn).toLocaleString()}</h2>\r\n\r\n          <div className='people'>\r\n            { \r\n              people && people.map((person) => (\r\n                <Person \r\n                  key={person.id}\r\n                  {...person}\r\n                  bringPersonToFront={bringPersonToFront}\r\n                  removePerson={removePerson}\r\n                  handleToggleEditMode={handleToggleEditMode}\r\n                  handleEditInput={handleEditInput}\r\n                  addGift={addGift}\r\n                  handleUpdateGift={handleUpdateGift}\r\n                  removeGift={removeGift}\r\n                />\r\n              ))\r\n            }\r\n            <button onClick={createPersonCard} className='create-person-card-btn'>\r\n              <MdAdd />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nexport default List;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Login from './Login/Login';\nimport List from './List/List';\nimport './GiftLists.scss';\n\nclass GiftLists extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"GiftLists\">\n          <Route exact path='/' component={Login} />\n          <Route path='/list/:listId' component={List} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default GiftLists;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftLists from './GiftLists';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<GiftLists />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}